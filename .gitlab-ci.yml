# based on https://doc.rust-lang.org/cargo/guide/continuous-integration.html

# Setup a cache to cache job parts between jobs to ensure faster builds
cache:
  - key: "$CI_JOB_NAME"
    paths:
      - target/
      - /usr/local/cargo

stages:
  - cargo


# from https://gitlab.com/dlalic/gitlab-clippy#gitlab-ci-example
clippy:
  stage: cargo
  image: rust:latest
  before_script:
    - rustup component add clippy
    - cargo install gitlab_clippy
   
  script:
    - cargo clippy
  after_script:
    - cargo clippy --message-format=json | gitlab-clippy > gl-code-quality-report.json
  artifacts:
    reports:
      codequality: gl-code-quality-report.json
    expire_in: 1 week
  rules:
    - if: '$CODE_QUALITY_DISABLED'
      when: never
    - if: '$CI_PIPELINE_SOURCE == "push"'

test:
  stage: cargo
  image: rust:latest
  script:
    # Install script for graphviz
    - apt-get update
    - apt-get install graphviz -y
    - cargo test

build:
  stage: cargo
  image: rust:latest
  script:
    - cargo build --verbose

# from https://www.collabora.com/news-and-blog/blog/2021/03/24/rust-integrating-llvm-source-base-code-coverage-with-gitlab/
coverage:
  image: "rustdocker/rust:nightly"
  stage: cargo
  variables:
    RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Copt-level=0 -Clink-dead-code -Coverflow-checks=off -Zpanic_abort_tests -Cpanic=abort"
    LLVM_PROFILE_FILE: "coverage-%p-%m.profraw"
    CARGO_INCREMENTAL: "0"
  script:
    - apt-get update
    - apt-get install graphviz -y
    - rustup component add llvm-tools-preview
    - cargo test
    # generate html report
    - cargo install grcov
    - grcov . --binary-path ./target/debug/ -s . -t html --branch --ignore-not-existing --ignore "*cargo*" -o ./coverage/
    # generate cobertura report for gitlab integration
    - grcov . --binary-path ./target/debug/ -s . -t cobertura --branch --ignore-not-existing --ignore "*cargo*" -o coverage.xml
  artifacts:
    paths:
      - 'coverage'
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

formatting:
  stage: cargo
  image: rust:latest
  script:
    - rustup component add rustfmt
    - cargo fmt -- --check